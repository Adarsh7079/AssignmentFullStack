{"version":3,"file":"index.js","sources":["../src/helpers/base64.ts","../src/jwt/index.ts","../src/hooks/index.tsx"],"sourcesContent":["const map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst reverseMap = new Map();\n\nfor (let i = 0; i < map.length; i++) {\n  let bits: string = i.toString(2);\n  const padding: number = 6 - bits.length;\n  bits = \"0\".repeat(padding) + bits;\n\n  reverseMap.set(map.charCodeAt(i), bits);\n}\n\n/**\n * Convert base64 string to an array of bytes\n * @param base64Str - Base64 string\n * @returns Array of 1-byte elements\n */\nfunction toByteArray(base64Str: string): string[] {\n  let bits: string = \"\";\n\n  // convert base64 string to bits\n  for (let i = 0; i < base64Str.length; i++) {\n    bits += reverseMap.get(base64Str.charCodeAt(i));\n  }\n\n  // Remove padding (\"=\" characters)\n  bits = bits.slice(0, bits.length - (bits.length % 8));\n\n  const bytesArray = [];\n\n  // Separate string by 8-bit groups\n  for (let i = 0; i < bits.length / 8; i++) {\n    bytesArray.push(bits.slice(i * 8, i * 8 + 8));\n  }\n\n  return bytesArray;\n}\n\n/**\n * Convert a base64 string to an UTF-8 array\n * @param base64Str - Base64 string\n * @returns UTF-8 array\n */\nexport function base64DecToArray(base64Str: string): number[] {\n  // Replace - _ and remove padding\n  base64Str = base64Str.replaceAll(\"=\", \"\");\n  base64Str = base64Str.replaceAll(\"-\", \"+\");\n  base64Str = base64Str.replaceAll(\"_\", \"/\");\n\n  const charCodes: string[] = toByteArray(base64Str);\n\n  return charCodes.map((code) => parseInt(code, 2));\n}\n\n/**\n * Convert a UTF-8 array to string\n * @param bytes\n * @returns Decoded string\n */\nexport function UTF8ArrToStr(bytes: number[]): string {\n  let decoded: string = \"\"; // Decoded string\n  let nPart: number;\n  const arrayLength: number = bytes.length;\n\n  for (let i = 0; i < arrayLength; i++) {\n    nPart = bytes[i];\n    decoded += String.fromCodePoint(\n      nPart > 251 && nPart < 254 && i + 5 < arrayLength /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So... */\n          (nPart - 252) * 1073741824 +\n            ((bytes[++i] - 128) << 24) +\n            ((bytes[++i] - 128) << 18) +\n            ((bytes[++i] - 128) << 12) +\n            ((bytes[++i] - 128) << 6) +\n            bytes[++i] -\n            128\n        : nPart > 247 && nPart < 252 && i + 4 < arrayLength /* five bytes */\n        ? ((nPart - 248) << 24) +\n          ((bytes[++i] - 128) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 239 && nPart < 248 && i + 3 < arrayLength /* four bytes */\n        ? ((nPart - 240) << 18) +\n          ((bytes[++i] - 128) << 12) +\n          ((bytes[++i] - 128) << 6) +\n          bytes[++i] -\n          128\n        : nPart > 223 && nPart < 240 && i + 2 < arrayLength /* three bytes */\n        ? ((nPart - 224) << 12) + ((bytes[++i] - 128) << 6) + bytes[++i] - 128\n        : nPart > 191 && nPart < 224 && i + 1 < arrayLength /* two bytes */\n        ? ((nPart - 192) << 6) + bytes[++i] - 128 /* nPart < 127 ? */\n        : /* one byte */\n          nPart\n    );\n  }\n\n  return decoded;\n}\n","import { base64DecToArray, UTF8ArrToStr } from \"../helpers/base64\";\n\n/**\n * Try to decode a JWT. If the token is valid you'll get an object otherwise you'll get null\n * @param token - The JWT that you want to decode\n * @returns Decoded token\n */\nexport function decodeToken<T>(token: string): T | null;\nexport function decodeToken(token: string): Object | null;\nexport function decodeToken<T = Object>(token: string): T | null {\n  try {\n    // if the token has more or less than 3 parts or is not a string\n    // then is not a valid token\n    if (token.split(\".\").length !== 3 || typeof token !== \"string\") {\n      return null;\n    }\n\n    // payload ( index 1 ) has the data stored and\n    // data about the expiration time\n    const payload: string = token.split(\".\")[1];\n\n    const base64Bytes: number[] = base64DecToArray(payload);\n    // Convert utf-8 array to string\n    const jsonPayload: string = decodeURIComponent(UTF8ArrToStr(base64Bytes));\n    // Parse JSON\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error(\"There was an error decoding token: \", error);\n    // Return null if something goes wrong\n    return null;\n  }\n}\n\n/**\n * Verify if the token is expired or not\n * @param token - Your JWT\n * @returns boolean\n */\nexport function isTokenExpired(token: string): boolean {\n  const decodedToken: any = decodeToken(token);\n  let result: boolean = true;\n\n  if (decodedToken && decodedToken.exp) {\n    const expirationDate: Date = new Date(0);\n    expirationDate.setUTCSeconds(decodedToken.exp); // sets the expiration seconds\n    // compare the expiration time and the current time\n    result = expirationDate.valueOf() < new Date().valueOf();\n  }\n\n  return result;\n}\n","import { useState, useEffect } from \"react\";\nimport { decodeToken, isTokenExpired } from \"../jwt\";\n\n/**\n * This function will help you to decode a JWT and know if it's expired or not\n * @param userJwt - Your JWT\n * @returns An object containing the properties isExpired, decodedToken and reEvaluateToken\n */\nexport function useJwt<T>(userJwt: string): IUseJwt<T>;\nexport function useJwt(userJwt: string): IUseJwt;\nexport function useJwt<T>(userJwt: string): IUseJwt<T> {\n  const [isExpired, setIsExpired] = useState<boolean>(false);\n  const [decodedToken, setDecodedToken] = useState<T | null>(null);\n\n  useEffect(() => {\n    evaluateToken(userJwt);\n  }, [userJwt]);\n\n  const evaluateToken = (token: string) => {\n    setDecodedToken(decodeToken<T>(token));\n    setIsExpired(isTokenExpired(token));\n  };\n\n  return { isExpired, decodedToken, reEvaluateToken: evaluateToken };\n}\n\ninterface IUseJwt<T = Object> {\n  isExpired: boolean;\n  decodedToken: T | null;\n  reEvaluateToken: (token: string) => void;\n}\n"],"names":["map","reverseMap","Map","i","length","bits","toString","padding","repeat","set","charCodeAt","toByteArray","base64Str","get","slice","bytesArray","push","base64DecToArray","replaceAll","charCodes","code","parseInt","UTF8ArrToStr","bytes","decoded","nPart","arrayLength","String","fromCodePoint","decodeToken","token","split","payload","base64Bytes","jsonPayload","decodeURIComponent","JSON","parse","error","console","isTokenExpired","decodedToken","result","exp","expirationDate","Date","setUTCSeconds","valueOf","useJwt","userJwt","useState","isExpired","setIsExpired","setDecodedToken","useEffect","evaluateToken","reEvaluateToken"],"mappings":"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"}